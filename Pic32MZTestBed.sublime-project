{
	"folders":
	[
		{
			"path": "."
		}
	],
	"settings":
	{
		"build_options":
		[
		],
		"custom_constants":
		[
			"ANALOG",
			"ATTR_PACKED",
			"CLEARED",
			"DBG_UART_BRG",
			"DBG_UART_ERRINTEN",
			"DBG_UART_ERRINTFLAG",
			"DBG_UART_ERRVECTOR",
			"DBG_UART_IPCERRIP",
			"DBG_UART_IPCERRIS",
			"DBG_UART_IPCRXIP",
			"DBG_UART_IPCRXIS",
			"DBG_UART_IPCTXIP",
			"DBG_UART_IPCTXIS",
			"DBG_UART_MODE",
			"DBG_UART_MODEbits",
			"DBG_UART_NAME",
			"DBG_UART_PREFIX",
			"DBG_UART_RXINTEN",
			"DBG_UART_RXINTFLAG",
			"DBG_UART_RXREG",
			"DBG_UART_RXVECTOR",
			"DBG_UART_STA",
			"DBG_UART_STAbits",
			"DBG_UART_TXINTEN",
			"DBG_UART_TXINTFLAG",
			"DBG_UART_TXREG",
			"DBG_UART_TXVECTOR",
			"DEBUG",
			"DEBUG_BAUD_RATE",
			"DEBUG_BRG_CONFIG",
			"DEBUG_ECHO_INPUT_CHARACTERS",
			"DEBUG_INPUT_FIFO_LENGTH",
			"DEBUG_INPUT_MAX_LENGTH",
			"DEBUG_LEVEL_OUTPUT_ENABLED",
			"DEBUG_OUTPUT_ENABLED",
			"DEBUG_OUTPUT_FIFO_LENGTH",
			"DEBUG_OUTPUT_FILE_NAMES",
			"DEBUG_OUTPUT_LEVEL_PREFIX",
			"DEBUG_OVERFLOW_BACKOFF",
			"DEBUG_PRINT_BUFFER_SIZE",
			"DEBUG_WINDOWS_LINE_ENDINGS",
			"DIGITAL",
			"DISABLED",
			"DUMMY",
			"ENABLED",
			"ERROR_LEVEL_OUTPUT_ENABLED",
			"FILLED",
			"FOREVER",
			"HIGH",
			"INFO_LEVEL_OUTPUT_ENABLED",
			"INPUT",
			"LED_OFF",
			"LED_ON",
			"LOW",
			"MHz",
			"MICRO_ONE_MS_COUNT",
			"MICRO_PERF_BUS2_FREQ",
			"MICRO_PERF_BUS3_FREQ",
			"MICRO_SYS_CLK_FREQ",
			"MegaHertz",
			"NOTIFY_LEVEL_OUTPUT_ENABLED",
			"NUM_MS_PER_DAY",
			"NUM_MS_PER_HOUR",
			"NUM_MS_PER_MINUTE",
			"NUM_MS_PER_SECOND",
			"NUM_MS_PER_YEAR",
			"NUM_SEC_PER_DAY",
			"NUM_SEC_PER_HOUR",
			"NUM_SEC_PER_MINUTE",
			"NUM_SEC_PER_YEAR",
			"OUTPUT",
			"OutputLevel_Debug",
			"OutputLevel_Error",
			"OutputLevel_Info",
			"OutputLevel_None",
			"OutputLevel_Notify",
			"OutputLevel_Warning",
			"POW16_0",
			"POW16_1",
			"POW16_2",
			"POW16_3",
			"POW16_4",
			"POW16_5",
			"POW16_6",
			"POW16_7",
			"POW16_8",
			"POW2_0",
			"POW2_1",
			"POW2_10",
			"POW2_11",
			"POW2_12",
			"POW2_13",
			"POW2_14",
			"POW2_15",
			"POW2_16",
			"POW2_17",
			"POW2_18",
			"POW2_19",
			"POW2_2",
			"POW2_20",
			"POW2_21",
			"POW2_22",
			"POW2_23",
			"POW2_24",
			"POW2_25",
			"POW2_26",
			"POW2_27",
			"POW2_28",
			"POW2_29",
			"POW2_3",
			"POW2_30",
			"POW2_31",
			"POW2_32",
			"POW2_4",
			"POW2_5",
			"POW2_6",
			"POW2_7",
			"POW2_8",
			"POW2_9",
			"PRESSED",
			"PRODUCTION_MODE",
			"RELEASED",
			"ResetCause_BrownOut",
			"ResetCause_DeadmanTimer",
			"ResetCause_ExternalReset",
			"ResetCause_PowerOn",
			"ResetCause_SoftwareReset",
			"ResetCause_WakeFromIdle",
			"ResetCause_WakeFromSleep",
			"ResetCause_WatchdogTimer",
			"TEST_BTN1_PULLUP",
			"TEST_BTN1_VALUE",
			"TEST_BTN2_PULLUP",
			"TEST_BTN2_VALUE",
			"TEST_BTN3_PULLUP",
			"TEST_BTN3_VALUE",
			"TEST_LED1_VALUE",
			"TEST_LED2_VALUE",
			"TEST_LED3_VALUE",
			"TICK_TIMER_ISR_PERIOD",
			"TICK_TIMER_PERIOD_TWEAK",
			"TICK_TIMER_PR_VALUE",
			"VERSION_BUILD",
			"VERSION_MAJOR",
			"VERSION_MINOR",
			"WARNING_LEVEL_OUTPUT_ENABLED",
			"kHz",
			"kiloHertz",
			"nullptr"
		],
		"custom_functions":
		[
			"#define ArrayCount(Array)",
			"#define Assert(Expression)",
			"#define Assert_(Expression)",
			"#define ClearArray(Array)",
			"#define ClearPointer(Pointer)",
			"#define ClearStruct(Structure)",
			"#define DBG_UART_BITPOS(REGNAME, BITNAME)",
			"#define DBG_UART_BITSET(REGNAME, BITNAME, value)",
			"#define Decrement(unsignedValue)",
			"#define DecrementAmount(unsignedValue, amount)",
			"#define FifoGet(FifoName, offset)",
			"#define FifoGetBytePntr(FifoName, offset)",
			"#define FifoLength(FifoName)",
			"#define FifoPop(FifoName)",
			"#define FifoPush(FifoName, newByte)",
			"#define FifoPushBytes(FifoName, bytesPntr, numBytes)",
			"#define FifoPushBytesHard(FifoName, bytesPntr, numBytes)",
			"#define FifoPushHard(FifoName, newByte)",
			"#define FifoSpace(FifoName)",
			"#define FlagSet(BitwiseField, Bit)",
			"#define FlagUnset(BitwiseField, Bit)",
			"#define Increment(unsignedValue, maximumValue)",
			"#define IncrementU32(unsignedValue)",
			"#define IncrementU8(unsignedValue)",
			"#define IsFlagSet(BitwiseField, Bit)",
			"#define LsbMask(numBits)",
			"#define MicroClrWDT()",
			"#define MicroDisableInterrupts()",
			"#define MicroEnableInterrupts()",
			"#define MicroRegLock()",
			"#define MicroRegUnlock()",
			"#define Print(formatStr, ...)",
			"#define PrintAt(outputLevel, formatStr, ...)",
			"#define PrintLine(formatStr, ...)",
			"#define PrintLineAt(outputLevel, formatStr, ...)",
			"#define PrintLine_D(formatStr, ...)",
			"#define PrintLine_E(formatStr, ...)",
			"#define PrintLine_I(formatStr, ...)",
			"#define PrintLine_N(formatStr, ...)",
			"#define PrintLine_W(formatStr, ...)",
			"#define Print_D(formatStr, ...)",
			"#define Print_E(formatStr, ...)",
			"#define Print_I(formatStr, ...)",
			"#define Print_N(formatStr, ...)",
			"#define Print_W(formatStr, ...)",
			"#define ReverseByteArray(array, size)",
			"#define Write(string)",
			"#define WriteAt(outputLevel, string)",
			"#define WriteLine(string)",
			"#define WriteLineAt(outputLevel, string)",
			"#define WriteLine_D(string)",
			"#define WriteLine_E(string)",
			"#define WriteLine_I(string)",
			"#define WriteLine_N(string)",
			"#define WriteLine_W(string)",
			"#define Write_D(string)",
			"#define Write_E(string)",
			"#define Write_I(string)",
			"#define Write_N(string)",
			"#define Write_W(string)",
			"bool DebugUartTxPut(u8 newByte)",
			"bool DebugUartTxPutBytes(const u8* dataPntr, u32 dataLength)",
			"bool IsHexChar(char c)",
			"bool TryParseHex32(const char* str, u32 numChars, u32* outValue)",
			"bool TryParseHex8(const char* str, u32 numChars, u8* outValue)",
			"bool TryParseHexBytes(const char* str, u32 numCharacters, u8* bufferOut, u32 bufferLength, u32* numBytesOut)",
			"bool TryParseInt32(const char* str, u32 numCharacters, i32* outValue)",
			"char DebugUartRxGet(u32 offset)",
			"char GetHexChar(u8 nibbleValue)",
			"char* DebugUartReadLine()",
			"const char* GetFileNamePart(const char* filePath)",
			"u32 DebugUartRxLength()",
			"u32 SplitNtString(const char* nullTermString, char splitChar, const char** partsBuffer, u32* lengthsBuffer, u32 maxParts)",
			"u32 SplitString(const char* str, u32 strLength, char splitChar, const char** partsBuffer, u32* lengthsBuffer, u32 maxParts)",
			"u32 TimeSinceMs(u32 counterValueMs)",
			"u32 TimeSinceSec(u32 counterValueSec)",
			"u8 HexCharValue(char c)",
			"u8 MicroDetectResetCause()",
			"void AppInitialize()",
			"void AppUpdate()",
			"void DebugPutByte(u8 newByte)",
			"void DebugUartFlush()",
			"void DebugUartInit()",
			"void DebugUartPrint(const char* rawFileName, OutputLevel_t outputLevel, bool newLine, const char* formatStr, ...)",
			"void DebugUartUpdate()",
			"void DebugUartWrite(const char* rawFileName, OutputLevel_t outputLevel, bool newLine, const char* string)",
			"void HandleDebugCommand(const char* commandStr)",
			"void HexToString(const u8* dataPntr, u32 dataLength, char* outBuffer)",
			"void MicroDelay(u32 delayMs)",
			"void MicroInit()",
			"void MicroReset()",
			"void PrintFormattedMilliseconds(OutputLevel_t outputLevel, u32 numMs)",
			"void PrintFormattedSeconds(OutputLevel_t outputLevel, u32 numSecs)",
			"void TickTimerInit()"
		],
		"custom_globals":
		[
			"DebugOutputBackoff",
			"MicroDeviceID",
			"MicroDeviceRevision",
			"TickCounterMs",
			"TickCounterSec",
			"Version"
		],
		"custom_types":
		[
			"OutputLevel_t",
			"Version_t"
		]
	}
}
